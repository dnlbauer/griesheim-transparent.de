version: '3.8'

services:
  frontend:
    image: griesheimtransparent-frontend
    container_name: griesheimtransparent-frontend
    build: "./../frontend"
    depends_on:
      - database
      - solr
      - previewservice
    environment:
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - SOLR_HOST=http://solr:8983/solr
      - SOLR_COLLECTION=ris
      - PREVIEW_HOST=http://previewservice:8000
      - RIS_DB_HOST=database
      - RIS_DB_PORT=${POSTGRES_PORT}
      - RIS_DB_NAME=${POSTGRES_DB}
      - RIS_DB_USER=${POSTGRES_USER}
      - RIS_DB_PASSWORD=${POSTGRES_PASSWORD}
      - DEBUG=${DEBUG}
      - UPDATE_SOLR_CRON=0 */3 * * *
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_PATH=/django_db/db.sqlite
      - DJANGO_SU_NAME
      - DJANGO_SU_PASSWD
      - DJANGO_SU_EMAIL
    volumes:
      - django_db:/django_db
      - django_staticfiles:/app/staticfiles
    ports:
      - 8000:8000
    command: gunicorn frontend.wsgi:application --bind 0.0.0.0:8000
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
  database:
    image: postgres
    container_name: griesheimtransparent-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
  tika:
    image: apache/tika:1.28.4-full
    container_name: griesheimtransparent-tika
    ports:
      - ${TIKA_PORT}:9998
    depends_on:
      - database
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
  scraper:
    image: griesheimtransparent-scraper
    container_name: griesheimtransparent-scraper
    build: ../RIScraper
    depends_on:
      - database
      - tika
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=database:${POSTGRES_PORT}
      - TIKA=http://tika:9998
      - NSCRAPER=${SCRAPER_SCRAPE_THREADS}
      - NANALYZER=${SCRAPER_ANALYZE_THREADS}
    # command: --start 08/2022 --end 08/2022
    entrypoint: crond -f -d 0
    volumes:
      - scraper_db:/var/lib/postgresql/data
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
  solr:
    image: griesheimtransparent-solr
    container_name: griesheimtransparent-solr
    build: ../solr
    user: "8983"
    environment:
      - SOLR_LOG_LEVEL=FINEST
    ports:
      - ${SOLR_PORT}:8983
    volumes:
      - solr_data://var/solr
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
  previewservice:
    image: fpurchess/preview-service
    container_name: griesheimtransparent-previewservice
    ports:
      - ${PREVIEWSERVICE_PORT}:8000
    networks:
      - griesheimtransparent
    restart: ${RESTART_RULE}
networks:
  griesheimtransparent:
volumes:
  solr_data:
  django_db:
  django_staticfiles:
  scraper_db:
